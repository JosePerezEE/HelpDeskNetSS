//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelpDeskNetSS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HelpDeskEntities : DbContext
    {
        public HelpDeskEntities()
            : base("name=HelpDeskEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Component> Components { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<RFC> RFCs { get; set; }
        public virtual DbSet<Maintenance> Maintenances { get; set; }
        public virtual DbSet<Response> Responses { get; set; }
        public virtual DbSet<Access> Accesses { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
    
        public virtual int SP_Ticket_Registro(string iDUsuario, string nombre, string descripcion, Nullable<int> iDComponente)
        {
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var iDComponenteParameter = iDComponente.HasValue ?
                new ObjectParameter("IDComponente", iDComponente) :
                new ObjectParameter("IDComponente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Registro", iDUsuarioParameter, nombreParameter, descripcionParameter, iDComponenteParameter);
        }
    
        public virtual int SP_Ticket_SEGUIMIENTO(Nullable<int> iDTicket, string iDUsuario, string prioridad, string estado, string usuarioAsignado)
        {
            var iDTicketParameter = iDTicket.HasValue ?
                new ObjectParameter("IDTicket", iDTicket) :
                new ObjectParameter("IDTicket", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var usuarioAsignadoParameter = usuarioAsignado != null ?
                new ObjectParameter("UsuarioAsignado", usuarioAsignado) :
                new ObjectParameter("UsuarioAsignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_SEGUIMIENTO", iDTicketParameter, iDUsuarioParameter, prioridadParameter, estadoParameter, usuarioAsignadoParameter);
        }
    
        public virtual int SP_Ticket_Proveedor(Nullable<int> iDComponente, string nombre, string descripcion, string tipo, string contacto, Nullable<System.DateTime> fecha)
        {
            var iDComponenteParameter = iDComponente.HasValue ?
                new ObjectParameter("IDComponente", iDComponente) :
                new ObjectParameter("IDComponente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Proveedor", iDComponenteParameter, nombreParameter, descripcionParameter, tipoParameter, contactoParameter, fechaParameter);
        }
    
        public virtual int SP_Ticket_RevisarProveedor(Nullable<int> iDTicket, string iDUsuario)
        {
            var iDTicketParameter = iDTicket.HasValue ?
                new ObjectParameter("IDTicket", iDTicket) :
                new ObjectParameter("IDTicket", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_RevisarProveedor", iDTicketParameter, iDUsuarioParameter);
        }
    
        public virtual int SP_Ticket_Componente(string nombre, string descripcion, string estado, string localizacion, Nullable<int> seguridad, Nullable<System.DateTime> fechaInstalacion, Nullable<System.DateTime> ultimoCambio, Nullable<System.DateTime> caducidad)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var localizacionParameter = localizacion != null ?
                new ObjectParameter("Localizacion", localizacion) :
                new ObjectParameter("Localizacion", typeof(string));
    
            var seguridadParameter = seguridad.HasValue ?
                new ObjectParameter("Seguridad", seguridad) :
                new ObjectParameter("Seguridad", typeof(int));
    
            var fechaInstalacionParameter = fechaInstalacion.HasValue ?
                new ObjectParameter("FechaInstalacion", fechaInstalacion) :
                new ObjectParameter("FechaInstalacion", typeof(System.DateTime));
    
            var ultimoCambioParameter = ultimoCambio.HasValue ?
                new ObjectParameter("UltimoCambio", ultimoCambio) :
                new ObjectParameter("UltimoCambio", typeof(System.DateTime));
    
            var caducidadParameter = caducidad.HasValue ?
                new ObjectParameter("Caducidad", caducidad) :
                new ObjectParameter("Caducidad", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Componente", nombreParameter, descripcionParameter, estadoParameter, localizacionParameter, seguridadParameter, fechaInstalacionParameter, ultimoCambioParameter, caducidadParameter);
        }
    
        public virtual int SP_Ticket_Mantenimiento(Nullable<int> iDTicket, string iDUsuario, string iDUsuarioAsig, Nullable<int> iDComponente, string asignacion, string descripcion)
        {
            var iDTicketParameter = iDTicket.HasValue ?
                new ObjectParameter("IDTicket", iDTicket) :
                new ObjectParameter("IDTicket", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var iDUsuarioAsigParameter = iDUsuarioAsig != null ?
                new ObjectParameter("IDUsuarioAsig", iDUsuarioAsig) :
                new ObjectParameter("IDUsuarioAsig", typeof(string));
    
            var iDComponenteParameter = iDComponente.HasValue ?
                new ObjectParameter("IDComponente", iDComponente) :
                new ObjectParameter("IDComponente", typeof(int));
    
            var asignacionParameter = asignacion != null ?
                new ObjectParameter("Asignacion", asignacion) :
                new ObjectParameter("Asignacion", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Mantenimiento", iDTicketParameter, iDUsuarioParameter, iDUsuarioAsigParameter, iDComponenteParameter, asignacionParameter, descripcionParameter);
        }
    
        public virtual int SP_Ticket_RFC(string iDUsuario, string descripcion, string proposito, string prioridad, string tiempoEstimado)
        {
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var propositoParameter = proposito != null ?
                new ObjectParameter("Proposito", proposito) :
                new ObjectParameter("Proposito", typeof(string));
    
            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));
    
            var tiempoEstimadoParameter = tiempoEstimado != null ?
                new ObjectParameter("TiempoEstimado", tiempoEstimado) :
                new ObjectParameter("TiempoEstimado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_RFC", iDUsuarioParameter, descripcionParameter, propositoParameter, prioridadParameter, tiempoEstimadoParameter);
        }
    
        public virtual int SP_Ticket_RFC_Aceptacion(Nullable<int> iDRFC, string iDUsuario, string estado)
        {
            var iDRFCParameter = iDRFC.HasValue ?
                new ObjectParameter("IDRFC", iDRFC) :
                new ObjectParameter("IDRFC", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_RFC_Aceptacion", iDRFCParameter, iDUsuarioParameter, estadoParameter);
        }
    
        public virtual int SP_Ticket_Respuesta(Nullable<int> iDTicket, string descripcion)
        {
            var iDTicketParameter = iDTicket.HasValue ?
                new ObjectParameter("IDTicket", iDTicket) :
                new ObjectParameter("IDTicket", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Respuesta", iDTicketParameter, descripcionParameter);
        }
    
        public virtual int SP_Ticket_Acceso(string iDUsuario, Nullable<int> iDComponente, string descripcion, string tipo)
        {
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var iDComponenteParameter = iDComponente.HasValue ?
                new ObjectParameter("IDComponente", iDComponente) :
                new ObjectParameter("IDComponente", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Acceso", iDUsuarioParameter, iDComponenteParameter, descripcionParameter, tipoParameter);
        }
    
        public virtual int SP_Ticket_Acceso_Aceptacion(Nullable<int> iD, string iDUsuario, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Acceso_Aceptacion", iDParameter, iDUsuarioParameter, estadoParameter);
        }
    
        public virtual int SP_Ticket_Manten_Estado(Nullable<int> iDManten, string iDUsuario, string iDUsuarioAsignado)
        {
            var iDMantenParameter = iDManten.HasValue ?
                new ObjectParameter("IDManten", iDManten) :
                new ObjectParameter("IDManten", typeof(int));
    
            var iDUsuarioParameter = iDUsuario != null ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(string));
    
            var iDUsuarioAsignadoParameter = iDUsuarioAsignado != null ?
                new ObjectParameter("IDUsuarioAsignado", iDUsuarioAsignado) :
                new ObjectParameter("IDUsuarioAsignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ticket_Manten_Estado", iDMantenParameter, iDUsuarioParameter, iDUsuarioAsignadoParameter);
        }
    }
}
