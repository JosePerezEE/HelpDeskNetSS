@model HelpDeskNetSS.Models.ViewModels.RFCViewModel

@{
    ViewBag.Title = "Editar";
}

<h2>Aprobar o rechazar la solicitud</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(d => d.RFC)
        @Html.HiddenFor(d => d.IDUsuario)
        @if (Request.IsAuthenticated)
        {
            if (User.IsInRole("Administrador"))
            {
                <div class="form-group" style="float:right">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Notificar" class="btn btn-google" />
                    </div>
                </div>
            }
        }
                <div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Fecha)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Fecha)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Descripción)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Descripción)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Proposito)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Proposito)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Prioridad)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Prioridad)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.TiempoEstimado)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.TiempoEstimado)
                        </dd>
                        @if (Request.IsAuthenticated)
                        {
                            if (User.IsInRole("Usuario"))
                            {
                                <dt>
                                    @Html.DisplayNameFor(model => model.Estatus)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => model.Estatus)
                                </dd>
                            }
                        }
                    </dl>
                    <hr />
                    @if (Request.IsAuthenticated)
                    {
                        if (User.IsInRole("Administrador"))
                        {
                    <div class="form-group">
                        @Html.DisplayNameFor(model => model.Estatus)
                        <div class="col-md-10">
                            @Html.DropDownList("Estatus", new List<SelectListItem> {
                           new SelectListItem{ Text="ACEPTADO", Value = "ACEPTADO" },
                           new SelectListItem{ Text="RECHAZADO", Value = "RECHAZADO" },
                           new SelectListItem{ Text="IMPLEMENTADO", Value = "IMPLEMENTADO" }}, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                        }
                    }
                </div>
    </div>
}

@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Administrador"))
    {
        @Html.ActionLink("Volver", "Index")
    }
    if (User.IsInRole("SuperAdmin") || User.IsInRole("Usuario"))
    {
        @Html.ActionLink("Volver", "Index", "Home")
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
